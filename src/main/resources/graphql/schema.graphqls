type Query {
    userWallets: [Wallet],
    getWalletById(id: String): Wallet
}
type Wallet {
    id: String,
    balance: Float,
    createdAt: Float,
    currency: Currency
    walletTransactionList: [WalletTransaction]
}

type WalletTransaction {
    id: Int,
    timestamp: Float,
    wallet: Wallet,
    amount: Float,
    type: String

}

type Currency {
    code: String,
    name: String,
    sellPrice: Float,
    purchasePrice: Float
}

type Mutation {
    addWallet(addWalletRequestDto: AddWalletRequestDto): Wallet
}
input AddWalletRequestDto {
    currencyCode: String,
    balance: Float
}